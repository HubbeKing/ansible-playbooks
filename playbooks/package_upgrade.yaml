- hosts: "{{ inventory_hosts }}"
  serial: 1
  vars_prompt:
    - name: "inventory_hosts"
      prompt: "Upgrade packages on which host or group in inventory?"
    - name: "upgrade_kernel_to_mainline"
      prompt: "Upgrade kernel to mainline using ubuntu-mainline-kernel.sh? (y/N)"
      default: "N"
  tasks:
    - name: "Update ubuntu-mainline-kernel script"
      become: true
      become_user: root
      get_url:
        dest: /usr/local/bin/ubuntu-mainline-kernel.sh
        url: https://raw.githubusercontent.com/pimlie/ubuntu-mainline-kernel.sh/master/ubuntu-mainline-kernel.sh
        mode: 0755
      when: "'ubuntu_servers' in group_names"

    - name: "Run full upgrade"
      become: true
      become_user: root
      apt:
        upgrade: full
        update_cache: true

    - name: "Check if reboot is required"
      register: reboot_required_file
      stat:
        path: /var/run/reboot-required

    - name: "Check if newer mainline kernel is available"
      command: ubuntu-mainline-kernel.sh -c
      register: kernel_update_exists
      when:
        - "'ubuntu_servers' in group_names"
        - "{{ upgrade_kernel_to_mainline }} == y"

    - name: "Install new mainline kernel"
      become: true
      become_user: root
      command: ubuntu-mainline-kernel.sh -i --yes
      when:
        - "'ubuntu_servers' in group_names"
        - "{{ upgrade_kernel_to_mainline }} == y"
        - kernel_update_exists.rc == 1

    # drain node
    - import_tasks: tasks/drain_node.yaml
      vars:
        host: "{{ inventory_hostname }}"
      when:
        - "'k8s_cluster' in group_names"
        - (reboot_required_file.stat.exists) or (kernel_update_exists.rc == 1)

    - name: "Reboot host"
      become: true
      become_user: root
      reboot:
        msg: "Reboot initiated by Ansible for kernel update"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 60
        test_command: uptime
      when:
        - (reboot_required_file.stat.exists) or (kernel_update_exists.rc == 1)

    # uncordon node
    - import_tasks: tasks/uncordon_node.yaml
      vars:
        host: "{{ inventory_hostname }}"
      when:
        - "'k8s_cluster' in group_names"
        - (reboot_required_file.stat.exists) or (kernel_update_exists.rc == 1)
