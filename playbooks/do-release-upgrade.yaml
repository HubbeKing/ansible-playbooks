- hosts: "{{ inventory_hosts }}"
  serial: 1
  vars_prompt:
    - name: "inventory_hosts"
      prompt: "Run do-release-upgrade on which host or group in inventory?"
      private: false
  tasks:
    - name: Upgrade packages
      become: true
      become_user: root
      apt:
        upgrade: full
        update_cache: true

    - name: Ensure update-manager is installed
      become: true
      become_user: root
      apt:
        name: update-manager-core
        state: present

    - name: "Check if there is a new release"
      become: true
      become_user: root
      command: do-release-upgrade -c
      register: upgrade_check_cmd
      failed_when: upgrade_check_cmd.rc not in [ 0, 1 ]
      when:
        - "'ubuntu' in group_names"

      # drain node
    - import_tasks: tasks/drain-node.yaml
      vars:
        host: "{{ inventory_hostname }}"
      when:
        - upgrade_check_cmd.rc == 0
        - "'k8s_cluster' in group_names"

    - name: "Run release upgrade"
      become: true
      become_user: root
      command: do-release-upgrade -f DistUpgradeViewNonInteractive
      when:
        - "'ubuntu' in group_names"
        - upgrade_check_cmd.rc == 0

    - name: "Reboot host"
      become: true
      become_user: root
      reboot:
        msg: "Reboot initiated by Ansible for release upgrade"
        connect_timeout: 5
        reboot_timeout: 600
        pre_reboot_delay: 0
        post_reboot_delay: 60
        test_command: uptime
      when:
        - upgrade_check_cmd.rc == 0

    # uncordon node
    - import_tasks: tasks/uncordon-node.yaml
      vars:
        host: "{{ inventory_hostname }}"
      when: "'k8s_cluster' in group_names"
