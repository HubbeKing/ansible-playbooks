- name: "Check if longhorn is deployed at all"
  command: kubectl get ns longhorn-system
  register: longhorn_deployed_cmd
  delegate_to: 127.0.0.1
  failed_when: "longhorn_deployed_cmd.rc not in [ 0, 1 ]"
  when:
    - "'k8s_cluster' in group_names"

- name: "Wait for longhorn readiness"
  shell: |
    set -o pipefail && \
    kubectl -n longhorn-system get nodes.longhorn.io {{ host }} -o json|jq .status.conditions.Ready.status
  register: longhorn_status
  until: longhorn_status.stdout.find("True") != -1
  retries: 30
  delay: 10
  delegate_to: 127.0.0.1
  when:
    - longhorn_deployed_cmd.rc != 1
    - "'longhorn_storage_nodes' in group_names"

- name: "Request longhorn replica drain"
  command: "kubectl -n longhorn-system patch nodes.longhorn.io {{ host }} --patch '{{ drain_patch }}' --type=merge"
  delegate_to: 127.0.0.1
  vars:
    drain_patch: "{{ lookup('file', '../files/k8s_drain_patch.yaml') }}"
  when:
    - longhorn_deployed_cmd.rc != 1
    - "'longhorn_storage_nodes' in group_names"

- name: "Wait for longhorn replicas to be evicted"
  shell: |
    set -o pipefail && \
    test $(kubectl -n longhorn-system get nodes.longhorn.io {{ host }} -o json|jq .status.diskStatus|jq .[]|jq .scheduledReplica|jq -s add|jq length) -eq 0
  register: longhorn_replica_count
  delegate_to: 127.0.0.1
  until: longhorn_replica_count.rc == 0
  retries: 120
  delay: 30
  when:
    - longhorn_deployed_cmd.rc != 1
    - "'longhorn_storage_nodes' in group_names"

- name: "Drain node"
  command: kubectl drain {{ host }} --ignore-daemonsets --delete-emptydir-data
  delegate_to: 127.0.0.1
  when:
    - "'k8s_cluster' in group_names"
