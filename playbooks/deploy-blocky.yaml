- hosts: "blocky"
  serial: 1
  become: true
  become_user: root
  tasks:
    # deploy blocky config
    - name: "Ensure blocky dir exists"
      file:
        path: /etc/blocky
        state: directory
        mode: 0644
    - name: "Deploy blocky config"
      copy:
        src: files/blocky/config.yml
        dest: /etc/blocky/config.yml
        mode: 0644
    - name: "Deploy blocky SSL cert"
      copy:
        src: files/blocky/cert.pem
        dest: /etc/blocky/cert.pem
        mode: 0644
    - name: "Deploy blocky SSL key"
      copy:
        src: files/blocky/key.pem
        dest: /etc/blocky/key.pem
        mode: 0644

    # deploy blocky
    - name: "Ensure blocky container is deployed"
      community.docker.docker_container:
        name: blocky
        image: ghcr.io/0xerr0r/blocky:v0.17
        privileged: true
        restart: true
        restart_policy: unless-stopped
        state: started
        ports:
          - "53:53/tcp"
          - "53:53/udp"
          - "443:443"
        volumes:
          - /etc/blocky/config.yml:/app/config.yml
          - /etc/blocky/cert.pem:/app/cert.pem
          - /etc/blocky/key.pem:/app/key.pem

    # deploy keepalived config
    - name: "Ensure keepalived dir exists"
      file:
        path: /etc/keepalived
        state: directory
        mode: 0644
    - name: Deploy keepalived.conf if primary DNS
      copy:
        src: files/blocky/keepalived_primary.conf
        dest: /etc/keepalived/keepalived.conf
        mode: 0644
      when: inventory_hostname == groups['blocky'][0]
    - name: Deploy keepalived.conf if secondary DNS
      copy:
        src: files/blocky/keepalived_secondary.conf
        dest: /etc/keepalived/keepalived.conf
        mode: 0644
      when: inventory_hostname != groups['blocky'][0]
    - name: Deploy DNS check script
      copy:
        src: files/blocky/check_dns.sh
        dest: /etc/keepalived/check_dns.sh
        mode: 0755

    # deploy keepalived
    - name: "Ensure keepalived container is deployed"
      community.docker.docker_container:
        name: keepalived
        image: docker.io/linkvt/osixia_keepalived:stable
        network_mode: host
        privileged: true
        restart: true
        restart_policy: unless-stopped
        state: started
        volumes:
          - /etc/keepalived/keepalived.conf:/usr/local/etc/keepalived/keepalived.conf
          - /etc/keepalived/check_dns.sh:/etc/keepalived/check_dns.sh
    - name: Wait before updating next host to ensure availability
      pause:
        seconds: 15
